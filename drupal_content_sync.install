<?php

/**
 * @file
 * Install file for drupal_content_sync.
 */

use Drupal\user\Entity\User;
use Drupal\Core\Config\FileStorage;

/**
 * Implements hook_install()
 * Creates the Drupal Content Sync user and provides him with needed permissions
 */
function drupal_content_sync_install() {
  $config_path    = drupal_get_path('module', 'drupal_content_sync') . '/config/install';
  $source         = new FileStorage($config_path);
  $config_storage = \Drupal::service('config.storage');

  $configsNames = [
    'key.key.drupal_content_sync',
    'encrypt.profile.drupal_content_sync',
    'user.role.drupal_content_sync',
  ];

  foreach ($configsNames as $name) {
    $config_storage->write($name, $source->read($name));
  }


  $username = 'Drupal Content Sync';

  \Drupal::moduleHandler()->alter('drupal_content_sync_username', $username);

  $data = [
    'userName' => $username,
    'userPass' => user_password(),
  ];


  $user = User::create();
  $user->setUsername($data['userName']);
  $user->setPassword($data['userPass']);
  $user->setEmail(DRUPAL_CONTENT_SYNC_EMAIL);
  $user->enforceIsNew();
  $user->activate();
  $user->addRole('drupal_content_sync');
  $user->save();

  $data     = drupal_content_sync_encrypt_values($data);
  $userData = \Drupal::service('user.data');

  $userData->set('drupal_content_sync', $user->id(), 'sync_data', $data);
}

/**
 * Update 8001 and 8002
 * Generates and encrypts a random password for the 'Drupal Content Sync' user
 * and update it's username with the new username_alter hook.
 */
function drupal_content_sync_update_8002(&$sandbox) {
  $user = user_load_by_mail(DRUPAL_CONTENT_SYNC_EMAIL);

  if (!empty($user)) {
    $userData = \Drupal::service('user.data');
    $password = user_password();

    $username = $user->getUsername();
    \Drupal::moduleHandler()->alter('drupal_content_sync_username', $username);

    $data = [
      'userName' => $username,
      'userPass' => $password,
    ];

    $data = drupal_content_sync_encrypt_values($data);

    $userData->set('drupal_content_sync', $user->id(), 'sync_data', $data);
    $user->setUsername($username);
    $user->setPassword($password);
    $user->save();
  }
  else {
    drupal_content_sync_install();
  }
}

/**
 * Implements hook_uninstall().
 */
function drupal_content_sync_uninstall() {
  $config = \Drupal::configFactory();
  $config->getEditable('encrypt.profile.drupal_content_sync')->delete();
  $config->getEditable('key.key.drupal_content_sync')->delete();
  $config->getEditable('rest.resource.drupal_content_sync_preview_resource')->delete();
  $config->getEditable('rest.resource.drupal_content_sync_resource')->delete();
  $config->getEditable('user.role.drupal_content_sync')->delete();
  $config->getEditable('webhooks.webhook.webhook_drupal_content_sync_export')->delete();

  /** @var \Drupal\user\Entity\User $user */
  $user = user_load_by_mail(DRUPAL_CONTENT_SYNC_EMAIL);
  if ($user) {
    $user->delete();
  }
}
