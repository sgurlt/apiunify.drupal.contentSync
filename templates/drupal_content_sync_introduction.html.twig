{#
/**
 * @file
 * Template file for the introduction page.
 */
#}

<p>{{ 'If you want an overview about what Drupal Content Sync is, please checkout our homepage'|trans }}, <a href="https://cms-content-sync.io/">cms-content-sync.io</a>.</p>

<p>{{ 'For improved performance we\'re using a Node.js backend as the synchronization core. We can provide you a free sync core at any time, just let us know at'|trans }} <a href="mailto:support@edge-box.com?subject=Drupal%20Content%20Sync%20access">support@edge-box.com</a>.</p>

<p>{{ 'If you want a demo or need support at any point, please let us know at'|trans }} <a href="mailto:info@edge-box.com?subject=Drupal%20Content%20Sync%20support">support@edge-box.com</a>.</p>

<h2>{{ 'Overview'|trans }}</h2>

<p>{{ 'Drupal Content Sync allows the definition of synchronization rules per entity type. These rules are managed in a Flow whereas different datasets can be separated by creating multiple Pools. This separation allows you to manage the syndication of content extremely precisely. You can create as many Flows and Pools as you need.' }}</p>

<p>{{ 'Each entity type in each Flow allows you to define an Entity Handler as well as a Field Handler for each field. These handlers can be extended programmatically if required. Each handler offers different configuration options, e.g. if you only want to push published content and ignore unpublished content or to automatically export referenced content like paragraphs and media elements.'|trans }}</p>

<h2>{{ 'Usage'|trans }}</h2>

<p>{{ 'Start by creating a Pool to store your data in. If you have sites that require different kinds of information, you can group them by using multiple Pools.'|trans }}</p>

<p>{{ 'Once you have created a Pool, add a Flow that defines the rules of synchronization. Best practice is to start with the Entity Type that is your entry point of synchronization, usually Nodes. If unsure always use the Default handler of the entity type and define whether you want to export or import entities on the site you configure and apply the same rule to the fields of that entity type.'|trans }}</p>

<p>{{ 'If your entity type uses references that you want to be resolved, make sure to always include all referenced entity types in your configuration. If you have a node that uses Paragraphs, each Paragraph bundle\'s export setting must be set to "Referenced" so that it is automatically exported if an entity that references it is exported. The same applies for media elements, files and menu items for example.'|trans }}</p>

<h2>{{ 'Examples'|trans }}</h2>

<h3>{{ 'Cross synchronization'|trans }}</h3>

<p>{{ 'The easiest way to start is by defining a "cross synchronization" which is a synchronization that pushes changes to all sites and pulls changes from all sites. Add an "Auto Sync" pool. Setup a Node type and add a Flow that configures the "Export: All" setting for each site as well as the "Import: All" setting. At the "Export pool configuration" and "Import pool configuration" make sure to select "Force" for your "Auto Sync" pool. Feel free to check "Export deletion" and "Import deletion" as well.'|trans }}</p>

<p>{{ 'That\'s all the basic settings you need. Once saved, go to the Content page to add a new node. Once saved, the created node will be exported to the pool and then automatically imported to all other sites you connected with the same config.'|trans }}</p>

<h3>{{ 'Content staging'|trans }}</h3>

<p>{{ 'The most popular use case for content syndication is content staging that allows you to prepare and review content on one environment and then push it to all other environments that need it.'|trans }}</p>

<p>{{ 'To setup content staging, create one pool for each group of sites that you need to address separately. Typically you always have an "All" pool for all the standard elements like menus, footer blocks, imprint, the privacy page etc.'|trans }}</p>

<p>{{ 'Next go to your content master site and add an "Export" flow. Add a handler to each content type you want to export and make sure to select "Manually" for "Export" and "Allow" for each of your pools. Typically you want to "Export deletion" as well so that content can be deleted centrally as well. Make sure that each paragraph, media and file field and usually also the menu field have "Export referenced entities" enabled.'|trans }}</p>

<p>{{ 'Now make sure that all entity types that can be referenced and should also be exported like paragraphs, media, file and menu items also have their handler enabled and their "Export" setting set to "Referenced". Check that all Pools are at "Allow" as well.'|trans }}</p>

<p>{{ 'Visit your subsite to setup the same Pools. Next add an "Import" flow. Again, add a handler to each content type you want to import and make sure to select "All" for "Import" and "Force" for each Pool this site belongs to. Typically you also want to "Import deletion" for the central deletion of content. Usually for "Import updates" you want to select "Forbid local changes and update" to forbid local changes on imported content or "Update unless overwritten" to allow local editors to apply custom changes without being lost on the next sync.'|trans }}</p>

<p>{{ 'As with the Export Flow, go through all entity types that can be referenced, chose their handler and at "Import" select "Referenced" with all pools the site belongs to set to "Force".'|trans }}</p>

<p>{{ 'Once all sites are setup, test your configuration by creating a content with referenced fields as required. When editing, use the "Export options" area to select the pools to export to. On the Content page use the "Push changes" action of the entity to export it. Check the subsites to see that your content gets distributed to the right sites.'|trans }}</p>

<h3>{{ 'Custom'|trans }}</h3>

<p>{{ 'Feel free to use the config options available for any other use case or simply contact us for support with the configuration'|trans }}- <a href="mailto:support@edge-box.com?subject=Drupal%20Content%20Sync%20configuration">support@edge-box.com</a></p>

<h2>{{ 'Deployment'|trans }}</h2>

<p>{{ 'To support professional deployment workflows -especially for hundreds of sites- you can export and import both Pools and Flows as you need. You can also overwrite the "Site ID" for each site independently by using your settings.php. Exact instructions on this can be found when editing a Pool.'|trans }}</p>

<p>{{ 'Use Config Split to separate your different Flow configurations. A typical setup may contain Flows like "cross_sync", "news_export", "news_import".'|trans }}</p>

<h2>{{ 'Config Reference'|trans }}</h2>

<h3>{{ 'Flow'|trans }}</h3>

<h4>{{ 'Handler'|trans }}</h4>

<p>{{ 'Some entity and field types require specialized logic to work correctly. All basic entity and field types that require such handling like Media elements and Menu Items or Entity References already have a predefined default handler. More simple entity types don\'t require specialized logic can use a more simple default handler that applies the same default logic.'|trans }}</p>

<p>{{ 'Some of these handlers provide additional settings at "Handler settings". The "Entity Reference" handler for example allows you to not only keep references to other entity types across sites but to also export all referenced entities automatically so that a full dependency tree is exported along with the content itself- don\'t forget to also apply an entity type handler and a "Referenced" setting to all referenced entity types as well however.'|trans }}</p>

<h4>{{ 'Export'|trans }}</h4>

<p>{{ 'Select when you want to export entities of this type. By default no entities will be exported. Select "All" to export all entities automatically whenever they\'re created or updated and optionally deleted. If you want to only export content that has been referenced by another entity that\'s exported, select the "Referenced" setting. If you need more control, select "Manually" and use the "Push changes" action on the entity overview page either directly in the drop down or as a batch action.'|trans }}</p>

<p>{{ 'For fields you can either include it ("Yes" option) or exclude it ("No" option). By default all fields will be included. If you don\'t need all fields or want to edit fields separately per site, configure "No" instead.'|trans }}</p>

<h4>{{ 'Export Pool Configuration'|trans }}</h4>

<p>{{ 'Select where entities of this type will be exported to. By using "Force" this pool will always be used when exporting this entity. By using "Forbid", the pool will never be used. Using "Allow" adds a widget of type "Export pool configuration" (next setting) to the editing form of the entity type. There you can choose which pools you want to push the content to.'|trans }}</p>

<h4>{{ 'Export Deletion'|trans }}</h4>

<p>{{ 'If you want to export not only the "create" and "update" but also the "delete" action to delete exported content on all other sites as well, check this box.'|trans }}</p>

<h4>{{ 'Import'|trans }}</h4>

<p>{{ 'Select whether you want to import all entities automatically or none. An "Manually" option will be added soon, allowing you to manually select content on each site to import.'|trans }}</p>

<h4>{{ 'Import Pool Configuration'|trans }}</h4>

<p>{{ 'Either import this entity type from the given pool ("Force") or don\'t ("Forbid").'|trans }}</p>

<h4>{{ 'Import Deletion Settings'|trans }}</h4>

<p>{{ 'Select whether imported content that has been deleted on the source site should also be deleted on this site.'|trans }}</p>

<p>{{ 'Select whether imported content can still be deleted locally or only remotely.'|trans }}</p>

<h4>{{ 'Import updates'|trans }}</h4>

<p>{{ '"Dismiss Local Changes": Allow local changes, but overwrite them as soon as the remote sends an update.'|trans }}</p>

<p>{{ '"Ignore Updates Completely": Allow local changes and ignore all remote updates.'|trans }}</p>

<p>{{ '"Forbid Local Changes and Update": Forbid local changes and import all remote updates.'|trans }}</p>

<p>{{ '"Update Unless Overwritten Locally": Forbid local changes unless an "Overwrite" checkbox is checked at each entity. If checked, all remote updates will be ignored. The only exception here is the "Default Entity Reference" field handler. If you check the "Merge Local Changes" box, all remote updates will be merged with all local changes which is especially useful for multi-paragraph pages.'|trans }}</p>

<h2>{{ 'Development'|trans }}</h2>

<p>{{ 'If you require additional entity type or field handlers, contact us! We\'re constantly working on improving the product and adding new options to it. We\'re always happy to hear your story and know about your needs'|trans }}- <a href="mailto:development@edge-box.com?subject=Drupal%20Content%20Sync%20roadmap">development@edge-box.com</a></p>

<p>{{ 'Of course you can also just add a "drupal_content_sync" plugin for "entity_handler" or "field_handler". Checkout the "EntityHandlerInterface", "FieldHandlerInterface" and "EntityHandlerBase", "FieldHandlerBase" classes.'|trans }}</p>

<p>{{ 'Found a bug? Let us know!'|trans }} <a href="mailto:development@edge-box.com?subject=Drupal%20Content%20Sync%20bug">development@edge-box.com</a></p>

<h2>{{ 'Pricing'|trans }}</h2>

<p>{{ 'If you want to use Drupal Content Sync in production, just let us know and we\'ll setup a short call to understand your exact requirements'|trans }}- <a href="mailto:sales@edge-box.com?subject=Drupal%20Content%20Sync%20sales">sales@edge-box.com</a></p>

<h2>{{ 'Hosting and SLA'|trans }}</h2>

<p>{{ 'The easiest way to use Drupal Content Sync is to connect the sync core as a service provided by us. In this case you have to make sure that all connected environments are accessible from the sync core via public domain/IP. If you need more control of your data we can provide you the Docker images to host it yourself. In this case only our central licensing host must be accessible for the Container to start.'|trans }}</p>

<p>{{ 'We provide continuous updates and enterprise-grade SLAs for each of our products. Just let us know what you need and we\'re here to help'|trans }}- <a href="mailto:sales@edge-box.com?subject=Drupal%20Content%20Sync%20SLA">sales@edge-box.com</a></p>
